name: CI/CD Pipeline

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "adopt"

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      # Backend steps
      - name: Build and Test Backend
        working-directory: ./back
        run: |
          mvn clean install
          mvn verify

      - name: Upload Backend Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: back/target/site/jacoco/

      # Frontend steps
      - name: Install Frontend Dependencies
        working-directory: ./front
        run: npm install

      - name: Test Frontend
        working-directory: ./front
        run: npm test -- --watch=false --browsers=ChromeHeadless --code-coverage

      - name: Build Frontend
        working-directory: ./front
        run: npm run build

      - name: Upload Frontend Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: front/coverage/

      # SonarQube Analysis
      - name: SonarQube Backend Analysis
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: |
            -Dsonar.projectKey=antunesd_projet-ci-ci-oc-back
            -Dsonar.sources=./back/src
            -Dsonar.tests=./back/src/test
            -Dsonar.java.binaries=./back/target/classes
            -Dsonar.coverage.jacoco.xmlReportPaths=./back/target/site/jacoco/jacoco.xml
            -Dsonar.projectName=bobapp-back
            -Dsonar.projectVersion=${{ github.sha }}
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectDescription=Backend de l'application BobApp
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.java.source=11
            -Dsonar.java.target=11

      - name: SonarQube Frontend Analysis
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: |
            -Dsonar.projectKey=antunesd_projet-ci-ci-oc-front
            -Dsonar.sources=./front/src
            -Dsonar.tests=./front/src
            -Dsonar.javascript.lcov.reportPaths=./front/coverage/lcov.info
            -Dsonar.projectName=bobapp-front
            -Dsonar.projectVersion=${{ github.sha }}
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectDescription=Frontend de l'application BobApp
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.javascript.version=18

  docker-build-and-push:
    needs: test-and-build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Backend Docker Image
        working-directory: ./back
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/bobapp-back:${{ github.sha }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/bobapp-back:${{ github.sha }}
          docker tag ${{ secrets.DOCKER_USERNAME }}/bobapp-back:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/bobapp-back:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/bobapp-back:latest

      - name: Build and Push Frontend Docker Image
        working-directory: ./front
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/bobapp-front:${{ github.sha }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/bobapp-front:${{ github.sha }}
          docker tag ${{ secrets.DOCKER_USERNAME }}/bobapp-front:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/bobapp-front:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/bobapp-front:latest
